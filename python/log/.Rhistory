# Iterating over x = 0:5, find the x that minimizes the
# integral of H(x, mu)
get_optimal_x <- function() {
candidates = rep(0,0)
for (x_star in 0:5) {
candidates = c(candidates,compute_integral(x_star))
}
i <- which.min(candidates)
return(x_star[i])
}
x_star <- get_optimal_x()
print(x_star)
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
# ORF 411 Problem Set 2
# Problem 2 Part f
# Let H_of_x_mu represent H(x, mu) which will be the domain
# of the integrals that we will need to compute
H_of_x_mu <- function(x, mu) {
0.5*(ppois(x, mu) - 0.8)^2
}
# Given a value of x, find the integral of domain function H(x, mu)
# over mu ~ U(0,2)
compute_integral <- function (x) {
H = 0
dx = 0.001
for (mu in seq(0,2, by = dx)) {
H <- H + H_of_x_mu(x, mu) * dx
}
return(H)
}
# Iterating over x = 0:5, find the x that minimizes the
# integral of H(x, mu)
get_optimal_x <- function() {
candidates = rep(0,0)
x_stars = 0:5
for (x_star in x_stars) {
candidates = c(candidates,compute_integral(x_star))
}
i <- which.min(candidates)
print(min(candidates))
return(x_stars[i])
}
x_star <- get_optimal_x()
print(x_star)
# ORF 411 Problem Set 2
# Problem 2 Part f
# Let H_of_x_mu represent H(x, mu) which will be the domain
# of the integrals that we will need to compute
H_of_x_mu <- function(x, mu) {
0.5*(ppois(x, mu) - 0.8)^2
}
# Given a value of x, find the integral of domain function H(x, mu)
# over mu ~ U(0,2)
compute_integral <- function (x) {
H = 0
dx = 0.001
for (mu in seq(0,2, by = dx)) {
H <- H + H_of_x_mu(x, mu) * dx
}
return(H)
}
# Iterating over x = 0:5, find the x that minimizes the
# integral of H(x, mu)
get_optimal_x <- function() {
candidates = rep(0,0)
x_stars = 0:5
for (x_star in x_stars) {
candidates = c(candidates,compute_integral(x_star))
}
i <- which.min(candidates)
print(min(candidates))
return(x_stars[i])
}
x_star <- get_optimal_x()
print(x_star)
# ORF 411 Problem Set 2
# Problem 2 Part f
# Let H_of_x_mu represent H(x, mu) which will be the domain
# of the integrals that we will need to compute
H_of_x_mu <- function(x, mu) {
0.5*(ppois(x, mu) - 0.8)^2
}
# Given a value of x, find the integral of domain function H(x, mu)
# over mu ~ U(0,2)
compute_integral <- function (x) {
H = 0
dx = 0.001
for (mu in seq(0,2, by = dx)) {
H <- H + H_of_x_mu(x, mu) * dx
}
return(H)
}
# Iterating over x = 0:5, find the x that minimizes the
# integral of H(x, mu)
get_optimal_x <- function() {
candidates = rep(0,0)
x_stars = 0:5
for (x_star in x_stars) {
candidates = c(candidates,compute_integral(x_star))
}
i <- which.min(candidates)
print(min(candidates))
return(x_stars[i])
}
x_star <- get_optimal_x()
print(x_star)
# ORF 411 Problem Set 2
# Problem 2 Part f
# Let H_of_x_mu represent H(x, mu) which will be the domain
# of the integrals that we will need to compute
H_of_x_mu <- function(x, mu) {
0.5*(ppois(x, mu) - 0.8)^2
}
# Given a value of x, find the integral of domain function H(x, mu)
# over mu ~ U(0,2)
compute_integral <- function (x) {
H = 0
dx = 0.001
for (mu in seq(0,2, by = dx)) {
H <- H + H_of_x_mu(x, mu) * dx
}
return(H)
}
# Iterating over x = 0:5, find the x that minimizes the
# integral of H(x, mu)
get_optimal_x <- function() {
candidates = rep(0,0)
x_stars = 0:5
for (x_star in x_stars) {
candidates = c(candidates,compute_integral(x_star))
}
i <- which.min(candidates)
print(min(candidates))
return(x_stars[i])
}
x_star <- get_optimal_x()
print(x_star)
# ORF 411 Problem Set 2
# Problem 2 Part f
# Let H_of_x_mu represent H(x, mu) which will be the domain
# of the integrals that we will need to compute
H_of_x_mu <- function(x, mu) {
0.5*(ppois(x, mu) - 0.8)^2
}
# Given a value of x, find the integral of domain function H(x, mu)
# over mu ~ U(0,2)
compute_integral <- function (x) {
H = 0
dx = 0.001
for (mu in seq(0,2, by = dx)) {
H <- H + H_of_x_mu(x, mu) * dx
}
return(H)
}
# Iterating over x = 0:5, find the x that minimizes the
# integral of H(x, mu)
get_optimal_x <- function() {
candidates = rep(0,0)
x_stars = 0:5
for (x_star in x_stars) {
candidates = c(candidates,compute_integral(x_star))
}
i <- which.min(candidates)
print(candidates)
print(min(candidates))
return(x_stars[i])
}
x_star <- get_optimal_x()
print(x_star)
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW2/ORF411_HW2.R')
install("leaflet")
install.packages("leaflet")
install.packages("leaflet")
source('~/.active-rstudio-document')
a
source('~/.active-rstudio-document')
t.test(a~b)
t.test(a,b)
source('~/.active-rstudio-document')
summary(t)
t
source('~/.active-rstudio-document')
t
source('~/.active-rstudio-document')
t
source('~/.active-rstudio-document')
t
source('~/.active-rstudio-document')
t1
t2
b <- rep(0,10)
t1 <- t.test(a,b)
t1
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW4/Problem set 4-Wind simulation.R')
t.test(a,mu=0)
a <- c(0.5900,	0.386552248,	0.320019282,	0.340742835,	0.419329949,	1.126106022,	0.575236057,	0.571022079,	0.482877508,	0.459178213)
b <- c(0.6682,	0.412238458,	0.346018821,	0.368051637,	0.408362934,	0.798890564,	0.633353921,	0.52394663,	0.543235196,	0.412444353)
t.test(a,b)
a <- (0.9125,	0.47634231,	0.242606702,	-0.17160104,	0.162092379,	0.497103485,	0.594858248,	0.288821096,	0.441513482,	0.192430929)
a <- c(0.9125,	0.47634231,	0.242606702,	-0.17160104, 0.162092379,	0.497103485,	0.594858248,	0.288821096,	0.441513482,	0.192430929)
b <- c(0.7346,	0.550918898,	0.467875094,	0.203722787,	0.42119424,	0.385086194,	0.451442922,	0.415513001,	0.527297179,	0.383811659)
t.test(a,b)
a <- c(0.378845087,	0.397899172,	0.441279082,	0.250247872,	0.527683291,	0.40445445,	0.247030993,	0.429074481,	0.508538221,	0.39319521)
b <- c(0.399891392,	0.425760992,	0.454162231,	0.163219607,	0.602112031,	0.376114878,	0.169585064,	0.449330585,	0.533419483,	0.417183827)
t.test(a,b)
t.test(a-b, mu=0)
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW5/Problem Set 5 2016.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW5/Problem Set 5 2016.R')
a_i
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW5/Problem Set 5 2016.R')
a
a[which.min(var_d_i)]
var_d_i
which.min(var_d_i)
a[which.min(var_d_i)]
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW5/Problem Set 5 2016.R')
a_opt <- a[which.min(var_d_i)]
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW5/Problem Set 5 2016.R')
a
var_d_i
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW5/Problem Set 5 2016.R')
g <- function(a, mu) {
x <- 2/(a^2)*mu - 1/6
return(x)
}
var_d <- function(a, mu) {
g_a <- g(a,mu)
x <-
((-18*g_a^2 - 6*g_a + 1)/72)*a^4 + ((2*g_a+1)/24)*a^3 + ((g_a^2 - g_a)/4)*a^2
return(x)
}
mu <- 0.4545
sig <- 0.2597
a <- seq(0,10,by=0.1)
var_d_i <- rep(0, length(a))
for (i in length(a)) {
a_i <- a[i]
var_d_i[i] <- var_d(a_i, mu)
print(var_d_i[i])
}
a_opt <- a[which.min(var_d_i)]
help(range)
range(3)
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW5/Problem Set 5 2016.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW5/Problem Set 5 2016.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW5/Problem Set 5 2016.R')
a <- seq(0,2,by=0.01)
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW5/Problem Set 5 2016.R')
objective
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW5/Problem Set 5 2016.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW5/Problem Set 5 2016.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW5/Problem Set 5 2016.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW5/Problem Set 5 2016.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW5/Problem Set 5 2016.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW5/Problem Set 5 2016.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW5/Problem Set 5 2016.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW5/Problem Set 5 2016.R')
source('~/Documents/Princeton/Senior Year/Senior Fall/ORF411/HW5/Problem Set 5 2016.R')
sample_demand <- matrix(rexp(200, rate=.1), ncol=20)
View(sample_demand)
sample_demand <- matrix(rexp(4800, rate=.1), ncol=48)
View(sample_demand)
sample_demand <- matrix(rexp(4800, rate=.1), ncol=48)
sample_storage <- matrix(rexp(4800, rate=.1), ncol=48)
View(sample_storage)
sample_demand <- matrix(rexp(4800, rate=.1), ncol=48)
sample_storage <- matrix(rexp(4800, rate=.1), ncol=48)
View(sample_demand)
View(sample_storage)
View(sample_demand)
View(sample_storage)
View(sample_demand)
View(sample_storage)
sample_demand[48,100]
rexp(4800, rate=.1)
volume <- function(PRODUCT_DEMAND)
{
WKS = 48
MKTS = 100
sample_demand <- matrix(rexp(WKS*MKTS, rate=.1), ncol=WKS)
sample_price <- matrix(rexp(WKS*MKTS, rate=.1), ncol=WKS)
vol <- matrix(rep(0,WKS*MKTS), ncol=WKS)
for (PRODUCT in 1:4) {
for (WEEK in 1:WKS) {
for (MARKET in 1:MKTS) {
vol[MARKET,WEEK] <- sample_demand[MARKET, WEEK] * sample_price[MARKET, WEEK]
}
}
}
return(vol)
}
vol(1)
volume(1)
paste("hi","a")
paste("hi","a",sep='')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
plot(size, repositioned_vehicles, type = "l")
log()
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
plot(log(size), repositioned_vehicles, type = "l")
plot(log(size), cleaned, type = "l")
lines(log(size), DD_vehicles, type = "l")
lines(log(size), repositioned_vehicles, type = "l")
plot(log(size), log(repositioned_vehicles), type = "l")
plot(size, repositioned_vehicles, type = "l")
plot(cleaned, DD_vehicles, type = "l")
lines(cleaned, repositioned_vehicles, type = "l")
plot(cleaned, repositioned_vehicles, type = "l")
plot(cleaned, repositioned_vehicles, type = "h")
plot(cleaned, repositioned_vehicles, type = "l")
plot(cleaned, repositioned_vehicles, type = "l", cex = 16)
plot(cleaned, repositioned_vehicles, type = "h", cex = 16)
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
points(cleaned, repositioned_vehicles)
points(cleaned, repositioned_vehicles, cex = 6)
points(cleaned, repositioned_vehicles, cex = 69)
points(cleaned, repositioned_vehicles, cex = 2)
plot(cleaned, repositioned_vehicles, type = "l",
main = "Vehicles Required to Fulfill Trips",
xlab = "Number of Trips",
ylab = "Number of Vehicles")
points(cleaned, repositioned_vehicles, cex = 2)
help(points)
points(cleaned, repositioned_vehicles, pty= 6 )
points(cleaned, repositioned_vehicles, pty= 10 )
plot(cleaned, repositioned_vehicles, type = "l",
main = "Vehicles Required to Fulfill Trips",
xlab = "Number of Trips",
ylab = "Number of Vehicles")
points(cleaned, repositioned_vehicles, pch= 10 )
points(cleaned, repositioned_vehicles, pch= 12 )
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
points(cleaned, repositioned_vehicles, pch= 12, fill = "blue" )
points(cleaned, repositioned_vehicles, pch= 12, bg = "blue" )
points(cleaned, repositioned_vehicles, pch= 12, bg = "blue" )
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
as.expression(bquote(10^ .(v1)))
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
18*60
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/alg_performance.R')
source('~/Desktop/ThesisWork/thesis/R/plotting.R')
plot(fleet_size_list, avo)
source('~/Desktop/ThesisWork/thesis/R/plotting.R')
source('~/Desktop/ThesisWork/thesis/R/plotting.R')
source('~/Desktop/ThesisWork/thesis/R/plotting.R')
plot(fleet_size_list, avo, main = "Average Vehicle Occupancy", xlab = "Fleet Size", ylab = "AVO")
source('~/Desktop/ThesisWork/thesis/R/plotting.R')
plot(fleet_size_list, avo,
main = "Average Vehicle Occupancy",
xlab = "Fleet Size",
ylab = "AVO",
pch = 16)
plot(fleet_size_list, reposition_distance)
source('~/Desktop/ThesisWork/thesis/R/plotting.R')
source('~/Desktop/ThesisWork/thesis/R/plotting.R')
source('~/Desktop/ThesisWork/thesis/R/plotting.R')
source('~/Desktop/ThesisWork/thesis/R/plotting.R')
plot(fleet_size_list, per_occupant)
plot(fleet_size_list, reposition_distance)
plot(fleet_size_list, avo,
main = "Average Vehicle Occupancy",
xlab = "Fleet Size",
ylab = "AVO",
pch = 16)
plot(fleet_size_list, per_occupant,
main = "Per Occupant Waiting Time",
xlab = "Fleet Size",
ylab = "Per Occupant Waiting Time",
pch = 16)
plot(fleet_size_list, reposition_distance)
plot(fleet_size_list, avo,
main = "Average Vehicle Occupancy",
xlab = "Fleet Size",
ylab = "AVO",
pch = 16)
plot(fleet_size_list, reposition_distance,
main = "Total Repositioning Distance",
xlab = "Fleet Size",
ylab = "Repositioning Distance",
pch = 16)
plot(fleet_size_list, avo,
main = "Average Vehicle Occupancy",
xlab = "Fleet Size",
ylab = "AVO",
pch = 16)
reposition_distance / 374,413
reposition_distance / 374413
source('~/Desktop/ThesisWork/thesis/R/plotting.R')
source('~/Desktop/ThesisWork/thesis/R/plotting.R')
c(254791.0, 287972.0, 277025.0, 282118.0, 270795.0, 266021.0, 250004.0, 260665.0, 245956.0, 241322.0)
c(254791.0, 287972.0, 277025.0, 282118.0, 270795.0, 266021.0, 250004.0, 260665.0, 245956.0, 241322.0)/374413
0.6805079 0.7691293 0.7398915 0.7534941 0.7232521 0.7105015 0.6677225 0.6961964 0.6569110 0.6445342c
c(287972.0, 282118.0, 277025.0, 270795.0, 266021.0, 260665.0, 254791.0, 250004.0, 245956.0, 241322.0)
c(287972.0, 282118.0, 277025.0, 270795.0, 266021.0, 260665.0, 254791.0, 250004.0, 245956.0, 241322.0)/374413
source('~/Desktop/ThesisWork/thesis/R/plotting.R')
source('~/Desktop/ThesisWork/thesis/R/plotting.R')
source('~/Desktop/ThesisWork/thesis/R/plotting.R')
plot(fleet_size_list, log(avo))
plot(log(fleet_size_list), log(avo))
fit.lm()
lm()
lm(log(fleet_size_list)~log(avo))
summary(lm(log(fleet_size_list)~log(avo)))
summary(lm(fleet_size_list~avo))
abline
abline(lm(height ~ bodymass))
abline(lm(fleet_size_list ~ avo))
plot(fleet_size_list, avo,
main = "Average Vehicle Occupancy",
xlab = "Fleet Size",
ylab = "AVO",
pch = 16)
abline(lm(fleet_size_list ~ avo))
abline(lm(avo~fleet_size_list))
plot(log(fleet_size_list), log(avo))
abline(log(avo)~log(fleet_size_list))
abline(lm(log(avo)~log(fleet_size_list)))
plot(fleet_size_list, per_occupant,
main = "Per Occupant Waiting Time",
xlab = "Fleet Size",
ylab = "Per Occupant Waiting Time",
pch = 16)
plot(fleet_size_list, avo,
main = "Average Vehicle Occupancy",
xlab = "Fleet Size",
ylab = "AVO",
pch = 16)
source('~/Desktop/ThesisWork/thesis/R/plotting.R')
plot(fleet_size_list, reposition_distance,
main = "Repositioning Distance Per Trip Request",
xlab = "Fleet Size",
ylab = "Repositioning Distance",
pch = 16)
plot(fleet_size_list, avo,
main = "Average Vehicle Occupancy",
xlab = "Fleet Size",
ylab = "AVO",
pch = 16)
library(ggplot2)
date_map <- function(m) {
d <- round(((m - 31449600) / 86400))
return(paste("1-",d,"-16", sep = ""))
}
library(data.table)
setwd("~/Desktop/ThesisWork/thesis/python/log/")
word <- "lenlog409"
lenlog <- sapply(fread(paste(word,".out",sep=""))[,6], as.numeric) # uncomment for large dataread
l = length((lenlog))
lenlog1 = lenlog[1:floor(l/2)]
lenlog2 = lenlog[(floor(l/2)+1):l]
ds <- seq(31536000,length.out = length(lenlog))
ds1 <- ds[1:floor(l/2)]
ds2 = ds[(floor(l/2)+1):l]
v1 <- seq(31536000, by = 2*86400, length.out = 10)
ggplot() +
geom_point(aes(x = ds1, y = lenlog1), col = "black") +
scale_x_continuous(breaks=v1, labels = date_map(v1)) +
labs(x = "Date", y = "Number of Undispatched Trip Requests",
title = "Size of Trip Buffer for Fleet Size of 20,000") +
theme(plot.title = element_text(hjust = 0.5))
ggplot() +
geom_point(aes(x = ds2, y = lenlog2), col = "black") +
scale_x_continuous(breaks=v1, labels = date_map(v1)) +
labs(x = "Date", y = "Number of Undispatched Trip Requests",
title = "Size of Trip Buffer for Fleet Size of 20,000") +
theme(plot.title = element_text(hjust = 0.5))
v1 <- seq(31536000, by = 2*86400, length.out = 16)
ggplot() +
geom_point(aes(x = ds2, y = lenlog2), col = "black") +
scale_x_continuous(breaks=v1, labels = date_map(v1)) +
labs(x = "Date", y = "Number of Undispatched Trip Requests",
title = "Size of Trip Buffer for Fleet Size of 20,000") +
theme(plot.title = element_text(hjust = 0.5))
